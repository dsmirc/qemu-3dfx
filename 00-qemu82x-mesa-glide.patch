diff -Nru ../orig/qemu-8.2.1/accel/kvm/kvm-all.c ./accel/kvm/kvm-all.c
--- ../orig/qemu-8.2.1/accel/kvm/kvm-all.c
+++ ./accel/kvm/kvm-all.c
@@ -1488,6 +1488,41 @@
     return 0;
 }

+void kvm_update_guest_pa_range(uint64_t start_pa, uint64_t size, void *host_va, int readonly, int add)
+{
+    KVMState *s = kvm_state;
+    KVMMemoryListener *kml = &s->memory_listener;
+
+    MemoryRegion mr;
+    MemoryRegionSection section;
+    RAMBlock ram_block;
+
+    memset(&ram_block, 0, sizeof(RAMBlock));
+    ram_block.mr = &mr;
+    ram_block.used_length = HOST_PAGE_ALIGN(size);
+    ram_block.max_length = HOST_PAGE_ALIGN(size);
+    ram_block.fd = -1;
+    ram_block.page_size = getpagesize();
+    ram_block.host = host_va;
+    ram_block.flags |= RAM_PREALLOC;
+
+    memory_region_init(&mr, NULL, NULL, HOST_PAGE_ALIGN(size));
+    mr.ram = true;
+    mr.ram_block = &ram_block;
+    mr.readonly = readonly;
+    mr.nonvolatile = false;
+
+    section.mr = &mr;
+    section.fv = 0;
+    section.offset_within_region = 0;
+    section.size = mr.size;
+    section.offset_within_address_space = start_pa;
+    section.readonly = mr.readonly;
+    section.nonvolatile = mr.nonvolatile;
+
+    kvm_set_phys_mem(kml, &section, add);
+}
+
 static void kvm_region_add(MemoryListener *listener,
                            MemoryRegionSection *section)
 {
diff -Nru ../orig/qemu-8.2.1/hw/i386/pc.c ./hw/i386/pc.c
--- ../orig/qemu-8.2.1/hw/i386/pc.c
+++ ./hw/i386/pc.c
@@ -1288,6 +1288,28 @@
     /* Super I/O */
     pc_superio_init(isa_bus, create_fdctrl, pcms->i8042_enabled,
                     pcms->vmport != ON_OFF_AUTO_ON);
+    /* Glide pass-through */
+    glidept_mm_init();
+    /* MESA pass-through */
+    mesapt_mm_init();
+}
+
+void glidept_mm_init(void)
+{
+    DeviceState *glidept_dev = NULL;
+
+    glidept_dev = qdev_new(TYPE_GLIDEPT);
+    sysbus_realize(SYS_BUS_DEVICE(glidept_dev), &error_fatal);
+    sysbus_mmio_map(SYS_BUS_DEVICE(glidept_dev), 0, GLIDEPT_MM_BASE);
+}
+
+void mesapt_mm_init(void)
+{
+    DeviceState *mesapt_dev = NULL;
+
+    mesapt_dev = qdev_new(TYPE_MESAPT);
+    sysbus_realize(SYS_BUS_DEVICE(mesapt_dev), &error_fatal);
+    sysbus_mmio_map(SYS_BUS_DEVICE(mesapt_dev), 0, MESAPT_MM_BASE);
 }
 
 void pc_nic_init(PCMachineClass *pcmc, ISABus *isa_bus, PCIBus *pci_bus,
diff -Nru ../orig/qemu-8.2.1/include/hw/i386/pc.h ./include/hw/i386/pc.h
--- ../orig/qemu-8.2.1/include/hw/i386/pc.h
+++ ./include/hw/i386/pc.h
@@ -195,6 +195,22 @@
 
 #define TYPE_PORT92 "port92"
 
+#if (((QEMU_VERSION_MAJOR << 8) | \
+      (QEMU_VERSION_MINOR << 4) | \
+       QEMU_VERSION_MICRO) < 0x510)
+#define qdev_new(x)         qdev_create(NULL,x)
+#define sysbus_realize(x,y) qdev_init_nofail((DeviceState *)x)
+#endif
+/* GLIDE pass-through */
+#define TYPE_GLIDEPT "glidept"
+#define GLIDEPT_MM_BASE 0xfbdff000
+void glidept_mm_init(void);
+
+/* MESA pass-through */
+#define TYPE_MESAPT "mesapt"
+#define MESAPT_MM_BASE 0xefffe000
+void mesapt_mm_init(void);
+
 /* pc_sysfw.c */
 void pc_system_flash_create(PCMachineState *pcms);
 void pc_system_flash_cleanup_unused(PCMachineState *pcms);
diff -Nru ../orig/qemu-8.2.1/include/sysemu/kvm.h ./include/sysemu/kvm.h
--- ../orig/qemu-8.2.1/include/sysemu/kvm.h
+++ ./include/sysemu/kvm.h
@@ -437,6 +437,8 @@
 
 #endif /* NEED_CPU_H */
 
+void kvm_update_guest_pa_range(uint64_t start_pa, uint64_t size, void *host_va, int readonly, int add);
+
 void kvm_cpu_synchronize_state(CPUState *cpu);
 
 void kvm_init_cpu_signals(CPUState *cpu);
diff -Nru ../orig/qemu-8.2.1/include/sysemu/whpx.h ./include/sysemu/whpx.h
--- ../orig/qemu-8.2.1/include/sysemu/whpx.h
+++ ./include/sysemu/whpx.h
@@ -115,6 +115,7 @@
  */
 void whpx_hcall_pending(CPUState *cs);
 void whpx_hcall_terminate(CPUState *cs);
+void whpx_update_guest_pa_range(uint64_t start_pa, uint64_t size, void *host_va, int readonly, int add);
 #endif /* CONFIG_WHPX */
 
 #endif /* HAX_H */
